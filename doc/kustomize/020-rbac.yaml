---
apiVersion: policy/v1
kind: PodSecurityPolicy
metadata:
  name: jitsi-privileged
spec:
  allowPrivilegeEscalation: true
  fsGroup:
    rule: RunAsAny
  hostIPC: false
  hostNetwork: true
  hostPID: true
  hostPorts:
  - max: 65535
    min: 0
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: jitsi-privileged
#   namespace: jitsi
# spec:
#   podSelector:
#     matchLabels:
#       k8s-app: jitsi
#   policyTypes:
#   - Ingress
#   - Egress
#   ingress:
#   - from:
#     - podSelector:
#         matchLabels:
#           k8s-app: jitsi
#   egress:
#   - to:
#     - ipBlock:
#         cidr: 0.0.0.0/0
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jitsi-privileged
  namespace: jitsi
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  resourceNames:
  - jitsi-privileged
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jitsi-privileged
  namespace: jitsi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jitsi-privileged
subjects:
- kind: ServiceAccount
  name: jitsi
