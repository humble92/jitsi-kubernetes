Entry point:
    https://github.com/jitsi-contrib/jitsi-kubernetes


https://docs.digitalocean.com/reference/doctl/how-to/install/


doctl auth init --context <NAME>
doctl auth list
doctl auth switch --context <NAME>
doctl auth remove --context humble-istudio

Or

kubectl config get-clusters
kubectl config get-users
kubectl config get-contexts
kubectl config use-context docker-desktop   
    cf. doctl kubernetes cluster kubeconfig remove do-sgp1-k8s-1-27-2-do-0-sgp1-1688488794472
    cf. kubectl config delete-cluster do-tor1-k8s-1-27-2-do-0-tor1-1688997606613
    cf. kubectl config delete-context  do-sgp1-k8s-1-27-2-do-0-sgp1-1688488794472
    cf. kubectl config unset contexts.do-tor1-k8s-1-27-2-do-0-tor1-1688997606613

kubectl cluster-info
kubectl version

******************************
        [Installing helm]
******************************

https://helm.sh/docs/intro/install/
https://www.digitalocean.com/community/tutorials/how-to-install-software-on-kubernetes-clusters-with-the-helm-3-package-manager
https://docs.digitalocean.com/products/kubernetes/how-to/manage-1click-apps/#installing-via-control-panel


************************************************
        [Installing ingress-nginx package]
************************************************
    cf. kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml
    cf. (DO) kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/do/deploy.yaml

    kubectl get pods -n ingress-nginx -l app.kubernetes.io/name=ingress-nginx --watch

    doctl compute load-balancer list
    

helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update ingress-nginx
helm search repo ingress-nginx
helm show values ingress-nginx --repo https://kubernetes.github.io/ingress-nginx
helm show values ingress-nginx/ingress-nginx > ingress-nginx.values.yml

    helm show values ingress-nginx/ingress-nginx

helm upgrade --install ingress-nginx ingress-nginx  --repo https://kubernetes.github.io/ingress-nginx  --namespace ingress-nginx --create-namespace
    cf. helm install nginx-ingress ingress-nginx/ingress-nginx --set controller.publishService.enabled=true --namespace ingress-nginx --create-namespace
    cf. kubectl --namespace ingress-nginx get services -o wide -w nginx-ingress-ingress-nginx-controller

    NGINX_CHART_VERSION="<chart-version>"
    helm install ingress-nginx ingress-nginx/ingress-nginx --version "$NGINX_CHART_VERSION" \
    --namespace ingress-nginx \
    --create-namespace \
    -f "<path-to-values-file>.yml"

kubectl get svc --namespace=ingress-nginx
kubectl get pods --all-namespaces -l app.kubernetes.io/name=ingress-nginx
kubectl describe service  --namespace=ingress-nginx ingress-nginx-controller
kubectl describe -n ingress-nginx secret ingress-nginx-admission

업데이트 필요 시 (version 바꾸어서 실행):
helm upgrade ingress-nginx ingress-nginx/ingress-nginx --version 4.7.1 \
  --namespace ingress-nginx \
  --values ingress-nginx.values.yml


************************************************
        [Installing cert manager]
************************************************

kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.2/cert-manager.yaml

kubectl get pods --namespace cert-manager

kubectl create -f staging_issuer.yaml
kubectl create -f prod_issuer.yaml

-------------------

kubectl create namespace cert-manager
helm repo add jetstack https://charts.jetstack.io
helm repo update
helm show values jetstack/cert-manager
helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v1.13.3 --set installCRDs=true

kubectl create -f prod_issuer.yaml


cf. for latest version
https://artifacthub.io/packages/helm/cert-manager/cert-manager

    More information on the different types of issuers and how to configure them
    can be found in our documentation:

    https://cert-manager.io/docs/configuration/

    For information on how to configure cert-manager to automatically provision
    Certificates for Ingress resources, take a look at the `ingress-shim`
    documentation:

    https://cert-manager.io/docs/usage/ingress/

************************************************
        [Installing jitsi meet]
************************************************

DNS 편집 && values IP 편집:
  or [ip].nip.io

kubectl create namespace jitsi

export JITSI_SECRET=
kubectl create secret generic jitsi-config -n jitsi --from-literal=JICOFO_COMPONENT_SECRET=$JITSI_SECRET --from-literal=JICOFO_AUTH_PASSWORD=$JITSI_SECRET --from-literal=JVB_AUTH_PASSWORD=$JITSI_SECRET

kubectl apply -k .


  cf. kubectl describe ingress --all-namespaces
  cf. kubectl describe certificate --all-namespaces
  cf. kubectl describe -n jitsi certificate tls-jitsi

  cf. wget --save-headers -O- room2.istudiomeet.com
  cf. curl room2.istudiomeet.com
  cf. curl https://room2.istudiomeet.com
  cf. curl -v https://room2.istudiomeet.com



Tips:

kubectl exec -it -n jitsi svc/istudiomeet-k8s-jitsi-meet-jvb -- /bin/bash
kubectl logs -n jitsi svc/istudiomeet-k8s-jitsi-meet-jvb
kubectl delete -k  ./my-jitsi
kubectl delete namespace jitsi



cf.

https://kubernetes.io/docs/reference/kubectl/
https://docs.digitalocean.com/reference/doctl/how-to/install/
https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nginx-ingress-with-cert-manager-on-digitalocean-kubernetes#step-6-issuing-staging-and-production-let-s-encrypt-certificates
https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nginx-ingress-on-digitalocean-kubernetes-using-helm



https://www.freenom.com/en/index.html?lang=en